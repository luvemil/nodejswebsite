#player

script(src="/socket.io/socket.io.js")
script.
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  var socket = io();

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '390',
      width: '640',
      videoId: 'jZxzz-N3oxM',
      origin: 'http://localhost/',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    // Define socket here since they need the player to be ready
    socket.on('playNow', () => {
      console.log("Received playNow signal");
      player.playVideo();
    });
    socket.on('pauseNow', () => {
      console.log("Received pauseNow signal");
      player.pauseVideo();
    });
    socket.on('loadNewVideo', (data) => {
      console.log("Received loadNewVideo signal");
      player.loadVideoById(data.id);
    });
    socket.on('resetVideo', () => {
      console.log("Received resetVideo signal");
      player.seekTo(0);
    });
    socket.on('seekVideoTo', (data) => {
      console.log("Received seekVideoTo signal");
      player.seekTo(data.sec);
    });
  }

  // 5. The API calls this function when the player's state changes.
  //    The function indicates that when playing a video (state=1),
  //    the player should play for six seconds and then stop.
  function onPlayerStateChange(event) {
    socket.emit('logevent', { status: event.data });
  }
  function stopVideo() {
    player.stopVideo();
  }

  function playVideo() {
    player.playVideo();
  }

button(onclick="socket.emit('playpausePress', {status: player.getPlayerState()})").
  Play/Pause

button(onclick="socket.emit('syncPress', {sec: player.getCurrentTime(), status: player.getPlayerState()})").
  Sync

button(onclick="socket.emit('resetPress', {status: player.getPlayerState()})").
  Reset

form(action="")
  input(id="m" autocomplete="off")
  button.
    Send

script(src="http://code.jquery.com/jquery-1.11.1.js")
script.
  $('form').submit(function(){
    socket.emit('newVideoId', $('#m').val());
    $('#m').val('');
    return false;
  });
