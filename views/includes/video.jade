#player

script(src="/socket.io/socket.io.js")
script.
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  var socket = io('http://localhost:3000');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '390',
      width: '640',
      videoId: 'M7lc1UVf-VE',
      origin: 'http://localhost/',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    // Define socket here since they need the player to be ready
    socket.on('playNow', () => {
      console.log("Recieved playNow signal");
      playVideo();
    });
  }

  // 5. The API calls this function when the player's state changes.
  //    The function indicates that when playing a video (state=1),
  //    the player should play for six seconds and then stop.
  function onPlayerStateChange(event) {
    socket.emit('logevent', { status: event.data });
  }
  function stopVideo() {
    player.stopVideo();
  }

  function playVideo() {
    player.playVideo();
  }

button(onclick="socket.emit('ButtonPress', {foo: 'bar'})").
  Play
